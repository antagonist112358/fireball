namespace Fireball.Tests {

	using System
	using SGC = System.Collections.Generic

  class TestClass {
    // Fields
    protected var text: string = "Hello World"
    val numTimes: int = 5

		// Class level inference (for literal value)
		val thisIsANum = 13.857
		
		// Class level inference for new ref type
		val aList = SGC.List.[String]()
		
    // Method
    def testMethod() : string 
		{
      // local variables
      var intVal = 4
      val str = "Goodbye"
      intVal = 5
			
			// test tuple assignment
			val (a, b) = (5, "Bella Connie!")
			
			b
    }
  }

  module Program {
    public def Main(args: Array[String]) : void {
			using System.Console
      WriteLine("Hello World")
			val tester = TestClass()
			val testMethodVal = tester.testMethod()
			WriteLine($"Value from test method: $testMethodVal")
			
			//Console.WriteLine("\nPress any key...")
			//Console.ReadKey(true)
    }
  }

}

/*
BEGIN-OUTPUT
Hello World
Value from test method: Bella Connie!
END-OUTPUT
*/