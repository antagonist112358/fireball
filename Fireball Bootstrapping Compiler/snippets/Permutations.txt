def interleave(x: PParameter, lst: list[PParameter]) : list[list[PParameter]] {
        match(lst) {
          | [] => [[x]]
          | head :: tail => (x :: head :: tail) :: interleave(x, tail).Map(i => head :: i)
        }
      }
      
def permutations(lst: list[PParameter]) : Seq[list[PParameter]] {
        | [] => [[]]
        | head :: tail =>
          permutations(tail).Map(x => interleave(head, x).Map(y => y)).Flatten(s => s)
      }
