using System;

public struct S {
  public  mutable  a : int;
  public  mutable  b : int;
}

class T {
  enum OpCode : ushort { | False }
  enum OpFlags : ushort { | None }
  static DecodeOp (mutable  word : ushort,mutable  op :  out OpCode,mutable  flags :  out OpFlags) :  void {
    op = ((word %& 0x00ff) :> OpCode);
    flags = ((word %& 0xff00) :> OpFlags);
  }
  static get_struct (mutable  s : out S) :  void {
    mutable  ss = Nemerle.Extensions.DefaultValue (S);
    ss.a = 1;
    ss.b = 2;
    s = ss;
  }
  static Main() :  int {
    mutable  op = Nemerle.Extensions.DefaultValue (OpCode);
    mutable  flags = Nemerle.Extensions.DefaultValue (OpFlags);
    mutable  s = Nemerle.Extensions.DefaultValue (S);
    DecodeOp ((0x0203 :> ushort), out op, out flags);
    if (op != (0x3 :> OpCode))
    {
       1;
    }
    else { {
    if (flags != (0x200 :> OpFlags))
    {
       2;
    }
    else { {
    get_struct (out s);
    if (s.a != 1)
    {
       3;
    }
    else { {
    if (s.b != 2)
    {
       4;
    }
    else { {
     0;
  }
  }
  }
  }
  }
  }
  }
  }
  }
}
/*
BEGIN-OUTPUT
END-OUTPUT
*/
