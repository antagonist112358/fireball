using System;

class Base
{
   mutable  value : int;

  public Value : int {
    get {  value; }
  }

  protected this (mutable  value : int)
  {
    this.value = value;
  }
}

class A : Base
{
  public this (mutable  _value : int)
  {
     base (1);
    Console.WriteLine ("Int");
  }

  public this (mutable  _value : uint)
  {
     base (2);
    Console.WriteLine ("UInt");
  }
}

class B : Base
{
  public this (mutable  _value : long)
  {
     base (3);
    Console.WriteLine ("Long");
  }

  public this (mutable  _value : ulong)
  {
     base (4);
    Console.WriteLine ("ULong");
  }
}

class C : Base
{
  public this (mutable  _value : short)
  {
     base (5);
    Console.WriteLine ("Short");
  }

  public this (mutable  _value : ushort)
  {
     base (6);
    Console.WriteLine ("UShort");
  }
}

class D : Base
{
  public this (mutable  _value : sbyte)
  {
     base (7);
    Console.WriteLine ("SByte");
  }

  public this (mutable  _value : byte)
  {
     base (8);
    Console.WriteLine ("Byte");
  }
}

class E : Base
{
  public this (mutable  _value : long)
  {
     base (9);
    Console.WriteLine ("Long");
  }

  public this (mutable  _e : E)
  {
     base (10);
    Console.WriteLine ("E");
  }

  public static @: ( value : long) :  E 
  {
     ( E (value));
  }
}

class F : Base
{
  public this (mutable  _value : int)
  {
     base (11);
    Console.WriteLine ("Int");
  }

  public this (mutable  _f : F)
  {
     base (12);
    Console.WriteLine ("F");
  }

  public static @: ( value : int) :  F 
  {
     ( F (value));
  }
}

class X
{
  static Test () :  int
  {
    {
      mutable  a =  A (4);
      if (a.Value != 1)
      {
         1;
      }
      else
            {
              {

      mutable  b =  B (4);
      if (b.Value != 3)
      {
         2;
      }
      else
            {
              {

      mutable  c =  C (4);
      if (c.Value != 5)
      {
         3;
      }
      else
            {
    {

      mutable  d =  D (4);
      if (d.Value != 7)
      {
         4;
      }
      else
    {
    {

    {
      mutable  a1 =  A (4u);
      if (a1.Value != 2)
      {
         5;
      }
      else

    {

    {

      mutable  b1 =  B (4u);
      if (b1.Value != 3)
      {
         6;
      }
      else

    {

    {

      mutable  c1 =  C (4);
      if (c1.Value != 5)
      {
         7;
      }
      else

    {

    {

      mutable  d1 =  D (4);
      if (d1.Value != 7)
      {
         8;
      }
      else

    {

    {

    {
      mutable  e =  E (4);
      if (e.Value != 9)
      {
         9;
      }
      else

    {

    {

      mutable  f =  F (4);
      if (f.Value != 11)
      {
         10;
      }
      else

    {

    {

     0;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
  }

  static Main () :  int
  {
    mutable  result = Test ();
    Console.WriteLine ("RESULT: {0}", result);
     result;
  }
}
/*
BEGIN-OUTPUT
Int
Long
Short
SByte
UInt
Long
Short
SByte
Long
Int
RESULT: 0
END-OUTPUT
*/
