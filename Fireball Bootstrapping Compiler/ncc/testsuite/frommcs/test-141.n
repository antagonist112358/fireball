using System;

class X {
  public static Main() :  int
  {
    if (! Test1 ())
    {  1;
    }
    else
  {
    if (! Test2 ())
    {  2;
    }
    else
  {
    if (! Test3 ())
    {  3;
    }
    else
  {
    
     0;
  }
  }
  }
  }
  
  static Test1 () :  bool
  {
    mutable  num1 = 105;
    mutable  num2 = 150;

    // should generate OverflowException
    try {
      checked {
        mutable  _sum = ( (num1 - num2) :> byte); ()
      }
      
       false;
    }

    // should generate OverflowException
    catch { |  _ is OverflowException =>  {
       true;
    }

    // should generate OverflowException
    }
  }
  
  static Test2 () :  bool
  {
    mutable  l = long.MinValue;
    
    // should generate OverflowException
    try {
      checked {
        l = - l;
      }
      
       false;
    }
    
    // should generate OverflowException
    catch { |  _ is OverflowException =>  {
       true;
    }
    
    // should generate OverflowException
    }
  }
  
  static Test3 () :  bool
  {
    mutable  i = int.MinValue;
    
    // should generate OverflowException
    try {
      checked {
        i = - i;
      }
      
       false;
    }
    
    // should generate OverflowException
    catch { |  _ is OverflowException =>  {
       true;
    }
    
    // should generate OverflowException
    }
  }
}
/*
BEGIN-OUTPUT
END-OUTPUT
*/
