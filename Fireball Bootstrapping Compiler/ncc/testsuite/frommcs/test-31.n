//
// Versioning test: make sure that we output a warning, but still call the derived
// method
//
using System;

class Base {
  public  mutable  which : int;
  
  public virtual A () :  void
  {
    which = 1;
  }
}

class Derived :Base {
  public virtual A () :  void // W: method.* hides method.* inherited from base class. To make the current member override that implementation, add the `override' keyword. Otherwise add the `new' keyword.
  {
    which = 2;
  }
}

class Test {
  static Main () :  int
  {
    mutable  d =  Derived ();

    //
    // This should call Derived.A and output a warning.
    //
    d.A ();

    
    if (d.which == 1)

    
    {
       1;

    
    }

    
    else
  {

    Console.WriteLine ("Test passes");
    
     0;
  }
  }
}
/*
BEGIN-OUTPUT
Test passes
END-OUTPUT
*/
