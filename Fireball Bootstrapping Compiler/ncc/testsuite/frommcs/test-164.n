using System;

class X
{
  protected virtual Foo () :  int
  {
     1;
  }

  protected delegate FooDelegate () :  int;
  protected  mutable  foo : FooDelegate;

  protected this ()
  {
    foo =  FooDelegate (Foo);
  }
}

class Y : X
{
  protected this ()
  {
     base (); }

  protected override Foo () :  int
  {
     2;
  }

   Hello () : int
  {
     foo ();
  }

  static Main () :  void
  {
    mutable  y =  Y ();
    mutable  result = y.Hello ();
  {

    if (result == 2)
      Console.WriteLine ("OK");
    else
      Console.WriteLine ("NOT OK");
  }
  }
}
/*
BEGIN-OUTPUT
OK
END-OUTPUT
*/
