// Test case for Bug #75934
// Checks for duplicate field names

using System;
using System.Collections;
using System.Reflection;

class test
{
        public testen (mutable  x : int) :  IEnumerable
        {
                for (mutable  i = 0;i < x; i++)
                        if (i % 2 == 0) {
                                mutable  o = i;
                                yield o;
                        } else {
                                mutable  o = i*2;
                                yield o;
                        }
        }
}

class reflect
{
  public static Main (_ :  array [string]) :  void
  {
    mutable  ht =  Hashtable ();
    mutable  asm = Assembly.GetAssembly (typeof (test));
    
    foreach (t :> Type in asm.GetTypes ())
    {
      ht.Clear ();
      foreach (fi :> FieldInfo in t.GetFields (BindingFlags.Public %| BindingFlags.NonPublic %| BindingFlags.Instance))
        ht.Add (fi.Name, fi);
    }
  }
}

/*
BEGIN-OUTPUT
END-OUTPUT
*/
