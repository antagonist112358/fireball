//
// Tests properties
//
using System;

class X {
  static  mutable  v : int;

  static this ()
  {
    v = 10;
  }

  public static Value : int {
    get {
       v;
    }

    set {
      v = value;
    }
  }

  static Main () :  int
  {
    if (Value != 10)
    {
       1;
    }
    else
  {

    Value = 4;

    if (Value != 4)

    {
       2;

    }

    else
  {

    mutable  y =  Y ("hello");

    if (y.Value != "hello")

    {
       3;

    }

    else
  {

    y.Value = "goodbye";
    if (y.Value != "goodbye")
    {
       4;
    }
    else
  {

    mutable  z =  Z ();

    if (Z.IVal != 4)

    {
       5;

    }

    else
  {
    Z.IVal = 10;
    if (Z.IVal != 10)
    {
       6;
    }
    else
  {

    z.XVal = 23;
    if (z.XVal != 23)
    {
       7;
    }
    else
  {

     0;
  }
  }
  }
  }
  }
  }
  }
  }
}
  
class Y {
   mutable  init : string;
  
  public this ( s : string)
  {
    init = s;
  }

  public Value : string {
    get {
       init;
    }

    set {
      init = value;
    }
  }
}

struct Z {
  static  mutable  val : int;
   mutable  xval : int;
  
  static this ()
  {
    val = 4;
  }

  static public IVal : int {
    get {
       val;
    }

    set {
      val= value;
    }
  }

  public XVal : int {
    get {
       xval;
    }

    set {
      xval = value;
    }
  }
}
/*
BEGIN-OUTPUT
END-OUTPUT
*/