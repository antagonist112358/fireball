// Bugs #77466 and #77460.
using System;
using System.Reflection;
using System.Collections.Generic;

public class Foo[T]
{
  public Test (_t : T) :  void
  { }
}

public class Tests
{
  public static foo[T] () :  void
  {
  }

  public static Test () :  int
  {
    mutable  mi = typeof (Tests).GetMethod ("foo");
    if (!mi.IsGenericMethod)
    {
       1;
    }
    else
  {
  {
    if (!mi.IsGenericMethodDefinition)
    {
       2;
    }
    else
  {
  {
    mutable  mi2 = mi.MakeGenericMethod (   array[ typeof (int) ]);
    if (!mi2.IsGenericMethod)
    {
       3;
    }
    else
  {
  {
    if (mi2.IsGenericMethodDefinition)
    {
       4;
    }
    else
  {
  {

    mutable  mi3 = typeof (Foo[int]).GetMethod ("Test");
    if (mi3.IsGenericMethod)
    {
       5;
    }
    else
  {
  {
    if (mi3.IsGenericMethodDefinition)
    {
       6;
    }
    else
  {
  {

     0;
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
#if DEBUG

#endif


  public static Main () :  int
  {
    mutable  result = Test ();
                if (result == 0)
      Console.WriteLine ("OK");
    else
      Console.WriteLine ("ERROR: {0}", result);     result;
  }
}

/*
BEGIN-OUTPUT
OK
END-OUTPUT
*/
