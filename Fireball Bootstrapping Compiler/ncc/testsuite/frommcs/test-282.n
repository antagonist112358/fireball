// Bug #62322.
using System;

public struct integer
{
  private  value : int;

  public this (mutable  value : int)
  {
    this.value = value;
  }

  public static @: ( i : int) :  integer
  {
      integer (i);
  }

  public static @: ( i : integer) :  double
  {
     Convert.ToDouble (i.value);
  }

  public static @+ ( x : integer, y :  integer) :  integer
  {
      integer (x.value + y.value);
  }
}

class X
{
  public static Add (mutable  x : integer,mutable  other :  object) :  object
  {
    if (other is int)
    {  x + (( other :> int));
    }
    else
  {
  {
    if (other is double)
    {  (x + (( other :> double))) : object
    }
    else
  {
  {
    throw  InvalidOperationException ();
  }
  }
  }
  }
  }

  static Main () :  int
  {
    mutable  i =  integer (3);
    mutable  d = 4.0;

    mutable  result = Add (i, d);
    if (!(result is double))
    {
       1;
    }
    else
  {
  {

    if (( result :> double) != 7.0)

    {
       2;

    }

    else
  {
  {

     0;
  }
  }
  }
  }
  }
}
/*
BEGIN-OUTPUT
END-OUTPUT
*/
