using System;
using System.Reflection;

[AttributeUsage (AttributeTargets.All)]
public class My : Attribute {
  public  mutable  o : object;

  public this ( o : object) {
    this.o = o;
  }
  
  [My(TypeCode.Empty)]
  public class Test {
    static public Main() :  int {
      mutable  info = typeof (Test);
      mutable  attributes = info.GetCustomAttributes (false);
      for (mutable  i = 0; i < attributes.Length; i += 1) {
        System.Console.WriteLine(attributes[i]);
      }
      if (attributes.Length != 1)
      {
         1;
      }
      else {
      mutable  attr = ( attributes [0] :> My);
      if (( attr.o :> TypeCode) != TypeCode.Empty)
      {
         2;
      }
      else {
       0;
    }
    }
    }
  }
}
/*
BEGIN-OUTPUT
My
END-OUTPUT
*/
