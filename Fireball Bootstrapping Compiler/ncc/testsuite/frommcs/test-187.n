//
// This test verifies that we resolve the source expression in a compound
// expression before we attempt to use it.
//
// The test also attempts 
//

using System.Collections.Specialized;

public class MyClass
{
  public Item [mutable  _s :  string ] : Container
  {
    get {  null; }
    set { ignore (value); (); }
  }    
}


public class Container
{
  public static @+ ( c :  Container, _o :  object ) :  Container
  {
     c;
  }  
}

class D {
  static A (mutable  n : NameValueCollection,mutable  m :  MyClass,mutable  o :  object) :  void
        {
    //
    // Tests that ";" is a StringLiteral, *and* it has been resolved.  Triggered
    // by indexers, as indexers trigger an OverloadResolve.
    //
                n ["a"] += ";";

    //
    // A different, but similar beast.  A bug existed in the compiler that
    // prevented the following from working (bug 36505)
    //
    m["apple"] += o;
        }

  
  static Main () :  int
  {
     0;
  }
}
/*
BEGIN-OUTPUT
END-OUTPUT
*/
