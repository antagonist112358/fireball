//
// Nested anonymous methods tests and capturing of different variables.
//
using System;

delegate D () :  void;

class X {
  static  mutable  GlobalStoreDelegate : D;
  
  static Main () :  void
  {
    mutable  d = MainHost ();

    d ();
    GlobalStoreDelegate ();
    GlobalStoreDelegate ();
  }

  static MainHost () :  D
  {
    mutable  toplevel_local = 0;
    
    mutable  d = fun () {
      mutable  anonymous_local = 1;
      
      GlobalStoreDelegate = fun() {
        Console.WriteLine ("var1: {0} var2: {1}", toplevel_local, anonymous_local);
        anonymous_local = anonymous_local + 1;
      };

      toplevel_local = toplevel_local + 1;
    };

     d;
  }
}
/*
BEGIN-OUTPUT
var1: 1 var2: 1
var1: 1 var2: 2
END-OUTPUT
*/
