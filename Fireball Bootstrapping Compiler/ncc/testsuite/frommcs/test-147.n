using System;

public class X
{
  public  mutable  Value : long = 5;
  public static  mutable  StaticValue : long = 6;

  public static Foo () :  X
  {
      X ();
  }
  
  public static Bar () :  X
  {
     Foo ();
  }

  public Baz () :  X
  {
     Bar ();
  }

  public Property : uint {
    get {
       3;
    }
  }

  public static StaticProperty : uint {
    get {
       20;
    }
  }

  public Item [mutable  _index : int] : int {
    get {
       1;
    }
  }
}

public class Y : X
{
  new public  mutable  Value : long = 8;
  new public static  mutable  StaticValue : long = 9;

  public static new Foo () :  Y
  {
      Y ();
  }

  public static new Bar () :  Y
  {
     Foo ();
  }

  public new Baz () :  Y
  {
     Bar ();
  }

  public new Property : uint {
    get {
       4;
    }
  }

  public new static StaticProperty : uint {
    get {
       21;
    }
  }

  public new Item [mutable  _index : int] : int {
    get {
       2;
    }
  }
}

public class Z : Y
{
  public Test () :  int {
    if (Property != 4)
    {
       20;
    }
    else { {

    if (StaticProperty != 21)

    {
       21;

    }

    else { {

    if ((( this :> X)).Property != 3)

    {
       22;

    }

    else { {

    if (X.StaticProperty != 20)

    {
       23;

    }

    else { {

    if (this [5] != 2)

    {
       24;

    }

    else { {

    if ((( this :> X)) [6] != 1)

    {
       25;

    }

    else { {

     0;
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
}

public class Test
{
  public static Main () :  int
  {
    mutable  y =  Y ();
    mutable  a = Nemerle.Extensions.DefaultValue (X);
    mutable b = Nemerle.Extensions.DefaultValue (X);
    mutable c = Nemerle.Extensions.DefaultValue (X);
    mutable d = Nemerle.Extensions.DefaultValue (X);

    a = Y.Bar ();
    if (!(a is Y))
    {
       1;
    }
    else
  {
  {

    b = y.Baz ();
    if (!(b is Y))
    {
       2;
    }
    else
  {
  {

    c = X.Bar ();
    if (c is Y)
    {
       3;
    }
    else
  {
  {

    d = (( y :> X)).Baz ();
    if (d is Y)
    {
       4;
    }
    else
  {
  {

    if (y.Value != 8)

    {
       5;

    }

    else
  {
  {

    if ((( y :> X)).Value != 5)

    {
       6;

    }

    else
  {
  {

    if (Y.StaticValue != 9)

    {
       7;

    }

    else
  {
  {

    if (X.StaticValue != 6)

    {
       8;

    }

    else
  {
  {

    if (y.Property != 4)

    {
       9;

    }

    else
  {
  {

    if ((( y :> X)).Property != 3)

    {
       10;

    }

    else
  {
  {

    if (y [5] != 2)

    {
       11;

    }

    else
  {
  {

    if ((( y :> X)) [7] != 1)

    {
       10;

    }

    else
  {
  {

    if (X.StaticProperty != 20)

    {
       11;

    }

    else
  {
  {

    if (Y.StaticProperty != 21)

    {
       12;

    }

    else
  {
  {

    mutable  z =  Z ();

     z.Test ();
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
  }
}
/*
BEGIN-OUTPUT
END-OUTPUT
*/
