using System;
public class Test {
    static Main () :  int {
        mutable  val1  = compare_gte(0, 0);
        mutable  val2  = compare_gte(1, 0);
        mutable  val3  = compare_gte(0, 1);
        mutable  val4  = compare_lte(0, 0);
        mutable  val5  = compare_lte(1, 0);
        mutable  val6  = compare_lte(0, 1);
        mutable  b = Nemerle.Extensions.DefaultValue (bool) :bool;
       
  b = (true == ( val1 :> bool));
  if (b == false)
  {
  {
      1;
  }
  }
  else {
        
  b = (true == ( val2 :> bool));
  if (b == false)
  {
  {
      2;
  }
  }
  else {

  b = (true == ( val3 :> bool));
  if (b == true)
  {
  {
      3;
  }
  }
  else {

  b = (true == ( val4 :> bool));
  if (b == false)
  {
  {
      4;
  }
  }
  else {

  b = (true == ( val5 :> bool));
  if (b == true)
  {
  {
      5;
  }
  }
  else {

  b = (true == ( val6 :> bool));
  if (b == false)
  {
  {
      6;
  }
  }
  else {

   0;
   }
   }
   }
   }
   }
   }
   }

   static compare_gte( a : int, b :  int) :  object
   {
        a >= b;
   }
   static compare_lte( a : int, b :  int) :  object
   {
        a <= b;
   }
}
/*
BEGIN-OUTPUT
END-OUTPUT
*/
