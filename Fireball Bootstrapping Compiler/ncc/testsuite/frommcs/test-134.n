//
// This test checks if we implement all the interfaces inherited
//

interface IA {
         A () : void;
}

interface IB : IA {
         B () : void;
}

interface IC : IA, IB {
   C () : void;
}

interface ID : IC {
}

class AA : IC {
   mutable  a : bool;
   mutable  b : bool;
   mutable  c : bool;
  public A () :  void { a = true; }
  public B () :  void { b = true; }
  public C () :  void { c = true; }

  public OK : bool {
    get {
       a && b && c;
    }
  }
}

class BB : ID{
   mutable  a : bool;
   mutable  b : bool;
   mutable  c : bool;
  public A () :  void { a = true; System.Console.WriteLine ("A"); }
  public B () :  void { b = true; }
  public C () :  void { c = true; }

  public OK : bool {
    get {
       a && b && c;
    }
  }
}

class T: IB {
        public A () :  void {}
        public B () :  void {}

        static Main() :  int {

    mutable  bb =  BB ();
    bb.A ();
    bb.B ();
    bb.C ();

    if (!bb.OK)

    {
       1;

    }

    else {

    mutable  aa =  AA ();
    aa.A ();
    aa.B ();
    aa.C ();
    if (!aa.OK)
    {
       2;
    }
    else {

     0;
  }
  }
  }
}
/*
BEGIN-OUTPUT
A
END-OUTPUT
*/
