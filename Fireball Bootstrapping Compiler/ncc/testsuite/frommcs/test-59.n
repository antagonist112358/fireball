//
// Tests the varios type conversions.
//
using System;

class X {

  static test_explicit () :  int
  {
    mutable  x_int = 1;
    mutable  x_uint_1 = 1u;
    mutable  x_uint_2 = 1U;
    mutable  x_long_1 = 1l;
    mutable  x_long_2 = 1L;
    mutable  x_ulong_1 = 1ul;
    mutable  x_ulong_2 = 1UL;
    mutable  x_ulong_3 = 1lu;
    mutable  x_ulong_4 = 1Lu;
    mutable  x_ulong_5 = 1LU;

    if (!(x_int is int)) // W: redundant

    {
       1;

    }

    else
  {
  {

    if (!(x_uint_1 is uint)) // W: redundant

    {
       2;

    }

    else
  {
  {

    if (!(x_uint_2 is uint)) // W: redundant

    {
       3;

    }

    else
  {
  {

    if (!(x_long_1 is long)) // W: redundant

    {
       5;

    }

    else
  {
  {

    if (!(x_long_2 is long)) // W: redundant

    {
       6;

    }

    else
  {
  {

    if (!(x_ulong_1 is ulong)) // W: redundant

    {
       7;

    }

    else
  {
  {

    if (!(x_ulong_2 is ulong)) // W: redundant

    {
       8;

    }

    else
  {
  {
    
    if (!(x_ulong_3 is ulong)) // W: redundant
    
    {
       9;
    
    }
    
    else
  {
  {

    if (!(x_ulong_4 is ulong)) // W: redundant

    {
       10;

    }

    else
  {
  {

    if (!(x_ulong_5 is ulong)) // W: redundant

    {
       11;

    }

    else
  {
  {

     0;

  }

  }

  }

  }

  }

  }

  }

  }

  }

  }

  }

  }

  }

  }

  }

  }

  }

  }

  }

  }

  }

  static test_implicit () :  int
  {
    mutable  i_int = 1;
    mutable  i_uint = 0x80000000;
    mutable  i_long = 0x100000000;
    mutable  i_ulong = 0x8000000000000000;

    if (!(i_int is int)) // W: redundant

    {
       1;

    }

    else
  {
  {
    if (!(i_uint is uint)) // W: redundant
    {
       2;
    }
    else
  {
  {
    if (!(i_long is long)) // W: redundant
    {
       3;
    }
    else
  {
  {
    if (!(i_ulong is ulong)) // W: redundant
    {
       4;
    }
    else
  {
  {

     0;
  }
  }
  }
  }
  }
  }
  }
  }
  }
  
  static Main () :  int
  {
    mutable  v = 0;
    v = test_explicit ();

    if (v != 0)

    {
       v;

    }

    else
  {
  {

    v = test_implicit ();
    if (v != 0)
    {
       20 + v;
    }
    else
  {
  {

    //
    // Just a compilation fix: 21418
    //
    mutable  l = 1;
    when (l != 0L)
      ();


    // This was a compilation bug, error: 57522
    mutable  _myulog = 0L;

    Console.WriteLine ("Tests pass");
     0;
  }
  }
  }
  }
  }
}
/*
BEGIN-OUTPUT
Tests pass
END-OUTPUT
*/
