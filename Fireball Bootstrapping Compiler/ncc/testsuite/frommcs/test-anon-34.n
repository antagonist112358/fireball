//
// This test is from Nigel Perry, Bugzilla #77060
//
// The issue here was that in the past we used to emit the
// Scope initialization on first use, which is wrong as illustrated
// in this test (the shared scope is not initialized for differnt
// code paths).
//
// This test is a running test, ensuring that it runs
//
#region

using System;
using System.Collections;
using System.Text;
using System.Timers;

#endregion

namespace Delegates
{ class Space
  { public  mutable  Value : int;

    public delegate DoCopy() :  void;

    public  mutable  CopyIt : DoCopy;

    public Leak(mutable  useArray : bool,mutable  max :  int) :  void
    { mutable  one = null : DoCopy;

      if(useArray)
      { 
        mutable  work = Nemerle.Extensions.DefaultValue ( array [int]);
        
        one = fun() 
              { work = array(max);
              };
      }
      else
      { 
        one = fun() { mutable _xans = (max + 1) * max / 2; (); };
      }

       Console.WriteLine("Here goes...");
  one();
  Console.WriteLine("... made it");
    }
  }

  class Program
  { static SpaceLeak() :  void
    { mutable  s =  Space();

      Console.WriteLine(s.Value);

      s.Leak(false, 1);

      Console.WriteLine(s.Value);
    }

    static Main(_args :  array [string]) :  void
    { SpaceLeak();
    }
  }
}

/*
BEGIN-OUTPUT
0
Here goes...
... made it
0
END-OUTPUT
*/
