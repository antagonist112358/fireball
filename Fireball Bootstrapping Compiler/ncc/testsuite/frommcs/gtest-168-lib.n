// Compiler options: -t:library
using System;

interface IComp[a]
{ }

class opt[c]
{ }

abstract class Func[p1,r]
{
  public apply (mutable  _x : p1) :  r
  {
    throw  System.Exception ();
  }
}

class NemerleMap[a,b]
  where a : IComp[a]
{
  public Find (mutable  _k : a) :  opt[b]
  {
     null;
  }

  public Fold[d] (mutable  _y : a) :  void
  {
  }

  class lambda[d,aa,bb] : Func[aa,aa]
    where aa : IComp[aa]
  {
    public apply2 (mutable  x : aa) :  aa
    {
       x;
    }
  }
}
