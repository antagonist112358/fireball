using System;
using System.Reflection;
using System.ComponentModel;

[assembly: CLSCompliant(true)]
[assembly: AssemblyTitle("")]

public class CLSCLass_6 {
    private  mutable  disposedEvent : object =  object ();
    public  mutable  event_handlers : EventHandlerList;    
        
    public event Disposed :  Delegate {
        add { event_handlers.AddHandler (disposedEvent, value); }
  remove { event_handlers.RemoveHandler (disposedEvent, value); }
    }
}

public delegate Delegate () :  CLSDelegate;
    
[Serializable]
public class CLSDelegate {
}

internal class CLSClass_5 {
        [CLSCompliant (true)]
        public Test () :  uint {
                 1;
        }
}

[CLSCompliant (true)]
public class CLSClass_4 {
        [CLSCompliant (false)]
        public Test () :  uint {
                 1;
        }
}

public class CLSClass_3 {
        [CLSCompliant (false)]
        public Test_3 () :  uint {
                 6;
        }
}

[CLSCompliant(false)]
public class CLSClass_2 {
        public XX : sbyte {
            get {  -1; }
        }
}

class CLSClass_1 {
        public Valid() :  UInt32 {
                 5;
        }
}
    
[CLSCompliant(true)]
public class CLSClass {
    
        private class C1 {
            
            [CLSCompliant(true)]
            public class C11 {
                protected Foo3() :  ulong {
                     1;
                }
            }

            protected Foo2() :  long {
                 1;
            }
        }

  [CLSCompliant(false)]
  protected internal class CLSClass_2 {
          public XX : sbyte {
              get {  -1; }
          }
  }

        
  [CLSCompliant(true)]
        private Valid() :  ulong {
                 1;
        }
        
        [CLSCompliant(true)]
        public XX : byte {
            get {  5; }
        }

//        protected internal sbyte FooProtectedInternal() {
//                return -4;
//       }
        
        internal FooInternal() :  UInt32 {
                 1;
        }        
    
        private Foo() :  ulong {
                 1;
        }

        
        public static Main() :  void {}
}
/*
BEGIN-OUTPUT
END-OUTPUT
*/
