// Compiler options: 

public partial class Test
{
  public  TheFoo : Foo;

  public this ()
  {
    this.TheFoo =  Foo ();
  }

  public partial interface IFoo
  {
     Hello ( foo : Test) : int;
  }

  public TestFoo () :  int
  {
     TheFoo.Hello (this);
  }
}

public partial class Test
{
  public partial class Foo : IFoo
  {
     IFoo_Hello ( _test : Test) : int implements IFoo.Hello
    {
       2;
    }

    public Hello ( _test : Test) :  int
    {
       1;
    }
  }

  public TestIFoo ( foo : IFoo) :  int
  {
     foo.Hello (this);
  }
}

class X
{
  static Main () :  int
  {
    mutable  test =  Test ();
    if (test.TestFoo () != 1)
    {
       1;
    }
    else
  {
    if (test.TestIFoo (test.TheFoo) != 2)
    {
       2;
    }
    else
  {
     0;
  }
  }
  }
}
/*
BEGIN-OUTPUT
END-OUTPUT
*/
