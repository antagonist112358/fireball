using System;
using System.Reflection;

static class StaticClass
{
    static Foo :  int = 1;    
 
    delegate D () :  object;
    enum E {}
  
    public static Name () :  string
    {
         "OK";
    }
}

public class MainClass
{
    public static Main () :  int
    {
        mutable  type_ = typeof (StaticClass);
        if (!type_.IsAbstract || !type_.IsSealed)
        { {
            Console.WriteLine ("Is not abstract sealed");
             1;
        }
        }
        else
    {
    {
        
        if (type_.GetConstructors ().Length > 0)
        
        { {
            Console.WriteLine ("Has constructor");
             2;
        }
        
        }
        
        else
    {
    {
        
        Console.WriteLine (StaticClass.Name ());
         0;
    }
    }
    }
    }
    }
}

/*
BEGIN-OUTPUT
OK
END-OUTPUT
*/
