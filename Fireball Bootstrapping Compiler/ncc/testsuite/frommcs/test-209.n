using System;

struct A
{
  public  i : int;

  public this ( i : int)
  {
    this.i = i;
  }
}

class X
{
   mutable  i : int;

  public Foo : int {
    get {
       2 * i;
    }

    set {
      i = value;
    }
  }

  public Item [ a : int] : int {
    get {
                       ignore (a);
       ( Foo :> int);
    }

    set {
                       ignore (value);
      Foo = a;
    }
  }

  public Item [ a : string] : string {
    set {
                        ignore (value);
      Console.WriteLine (a);
    }
  }

  public Bar : string {
    set {
      Console.WriteLine (value);
    }
  }

  public A : A {
    get {
        A (5);
    }

    set {
      Console.WriteLine (value);
    }
  }

  public this ( i : int)
  {
    this.i = i;
  }

  public static Main () :  int
  {
    mutable  x =  X (9);
    mutable  _a = x.Foo = 16;
    mutable  _b = x [8] = 32;
    x ["Test"] = "Hello";
    x.Bar = "World";
    x.A =  A (9);
    // Compilation-only test.
     0;
  }
}
/*
BEGIN-OUTPUT
Test
World
A
END-OUTPUT
*/
