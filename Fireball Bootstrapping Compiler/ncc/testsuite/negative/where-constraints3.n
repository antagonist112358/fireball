abstract class Base[T]
{
    public abstract Foo[S](_obj : S) : void where S : T;
}

class Derived : Base[int?]
{
    public override Foo[S](obj : S) : void
    {
        // the error message is not quite right here, as it is simply
        // invalid to use int? in T:struct context
        Bar(obj); // E: the type .*S.* in order to use it as type parameter .T. in method Derived.Bar
    }

    static Bar[T](_obj : T) : void where T : struct
    {
        
    }

    static Main() : void
    {
        Derived().Foo.[int?](1);
    }
}
