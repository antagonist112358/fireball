module B{
	Foo3[T,S](x : array[S]) : array[T] where T : S, class where S : class {
		x :> array[T];
	}

	foo() : void{
		_ = Foo3.[int,object](array[]); // E: the type `int' must be a reference type in order
		
	}
}

module A {
	Foo[T,S](x : array[S]) : array[T] where T : S {
		x :> array[T];	// E: type S must be reference type, add class constraint

	}

	Foo2[T,S](x : array[S]) : array[T] where T : S where S : class {
		x :> array[T];	// E: type T must be reference type, add class constraint
	}

	Main() : void {
		_ = Foo.[int,object](array[]);
		_ = Foo2.[int,object](array[]);		
	}
}