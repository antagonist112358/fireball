// REFERENCE: System.Core
using System;
using System.Linq;

module Test
{
  class Class1
  {
    public val : int;

    public this(i : int) { val = i }

    public override ToString() : string { $"$val" }
  }

  public delegate F[T, R](t : T) : R;

  public UseDelegate[TSource, TResult](o : F[TSource, TResult], val : TSource) : object
  {
    o(val)
  }

  public UseFunction[TSource, TResult](o : TSource -> TResult, val : TSource) : object
  {
    o(val)
  }
  
  Main() : void
  {
    def lst = [1, 2, 3];
    def lst = lst.Select(Class1);
    def res = lst.Sum(_.val);
    Console.WriteLine(res);
    Console.WriteLine(UseDelegate(Class1, 1));
    Console.WriteLine(UseFunction(Class1, 2));
    
  }
}

/*
BEGIN-OUTPUT
6
1
2
END-OUTPUT
*/
