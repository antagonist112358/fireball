using System.Console;
using Nemerle.Collections;

namespace NS1
{
  public class Async[A]
  {
    public Exec(_job : AsyncJob) : void
    {
      def t = GetType();
      WriteLine($"$(t.Name)$(t.GetGenericArguments().NToList())");
    }
  }

  public class AsyncJob
  {
    public ExecWhileReady[A](async : Async[A]) : void
    {
      async.Exec(this);
    }
  }
}

namespace NS2
{
  public class AsyncJob
  {
    public ExecWhileReady[A](async : Async[A]) : void
    {
      async.Exec(this);
    }
  }

  public class Async[A]
  {
    public Exec(_job : AsyncJob) : void
    {
      def t = GetType();
      WriteLine($"$(t.Name)$(t.GetGenericArguments().NToList())");
    }
  }
}

namespace NS3
{
  public class AsyncJob
  {
    public enum JobState
    {
      | Ready
    }

    public State : JobState { get; set; }
  }

  module Program
  {
    Main() : void
    {
      def job = AsyncJob();
      WriteLine(job.State);
      
      NS1.AsyncJob().ExecWhileReady(NS1.Async.[int]());
      NS2.AsyncJob().ExecWhileReady(NS2.Async.[string]());
    }
  } 
}

/*
BEGIN-OUTPUT
Ready
Async`1[System.Int32]
Async`1[System.String]
END-OUTPUT
*/
