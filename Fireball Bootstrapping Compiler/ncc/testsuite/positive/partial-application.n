using Nemerle.Collections;

class C {
  public foo (x : int) : void
  { 
    System.Console.WriteLine (x);
  }
}

def x = 42;
def c = C();
[c].Iter (_.foo (x));
[74].Iter (c.foo (_));

def qux (x, y, z) {
  System.Console.WriteLine ((x * y) + z);
}
NList.Iter2 ([1, 2], [3, 4], qux (7, _, _));
NList.Iter2 ([c], [31415], _.foo (_));

def f (n) {
  System.Console.WriteLine ($"f($n) called");
  n * 2
}
System.Console.WriteLine ([1,2].Map (_ + f (3)));

_ = _ is [1];
def toStr = _ :> string;
_ = toStr("a" : object);
_ = _ : object;


/*
BEGIN-OUTPUT
42
74
10
18
31415
f(3) called
f(3) called
[7, 8]
END-OUTPUT
*/
