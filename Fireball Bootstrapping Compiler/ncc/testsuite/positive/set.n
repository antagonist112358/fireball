using Nemerle.Collections;

using System.Console;

def set1 = Set().Add(1);
def set2 = Set().Add(2);
def set3 = Set().Add(3);
def set12 = Set().Add(1).Add(2);
def set23 = Set().Add(2).Add(3);
def set31 = Set().Add(3).Add(1);
def setOfSet1 = Set().Replace(set1).Replace(set2).Replace(set3).Replace(set1).Replace(set2).Replace(set3);
def setOfSet2 = Set().Replace(set12).Replace(set23).Replace(set31).Replace(set12).Replace(set23).Replace(set31);
def setOfSet3 = Set().Replace(set1).Replace(set2).Replace(set3).Replace(set12).Replace(set23).Replace(set31);
WriteLine(setOfSet1);
WriteLine(setOfSet2);
WriteLine(setOfSet3);
WriteLine(Set().Replace(setOfSet1).Replace(setOfSet2).Replace(setOfSet3).Replace(setOfSet1).Replace(setOfSet2).Replace(setOfSet3));

def hashset = Hashtable();
_ = hashset.Add(setOfSet1, 1);
_ = hashset.Add(setOfSet2, 2);
_ = hashset.Add(setOfSet3, 3);
WriteLine(hashset.Count);
hashset.Iter(WriteLine);


/*
BEGIN-OUTPUT
Set[Set[1], Set[2], Set[3]]
Set[Set[1, 2], Set[1, 3], Set[2, 3]]
Set[Set[1], Set[1, 2], Set[1, 3], Set[2], Set[2, 3], Set[3]]
Set[Set[Set[1], Set[1, 2], Set[1, 3], Set[2], Set[2, 3], Set[3]], Set[Set[1], Set[2], Set[3]], Set[Set[1, 2], Set[1, 3], Set[2, 3]]]
3
[Set[Set[1], Set[2], Set[3]], 1]
[Set[Set[1, 2], Set[1, 3], Set[2, 3]], 2]
[Set[Set[1], Set[1, 2], Set[1, 3], Set[2], Set[2, 3], Set[3]], 3]
END-OUTPUT
*/
