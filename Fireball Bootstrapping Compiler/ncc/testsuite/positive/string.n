using System.Console;

module Program
{
  var = "c";
  header = "f";
  Main () : void 
  {
    WriteLine($"a"
               "b$var"
               "d"
              + if (header != null) $"'$header'" else "");
    WriteLine(<#1#> /* comment */ @"-2-"
              "3");
              
    Write(Decision.IfEq("<path>", "<con>", 
      Decision.Failure(), Decision.Success(1)).ToString(""));
  }

  /** Represent a decision tree.  */
  internal variant Decision 
  {
    | Success { res : int; }
    | Failure
    | Assign 
      {   
        path  : object;
        decl  : object;
        dtree : Decision;
      }
    | IfEq 
      {
        path     : object;
        con      : object;
        if_true  : Decision;
        if_false : Decision;
      }

    public ToString (indent : string) : string
    {
      match (this) {
        | Success (res) =>
          $"$(indent)success $res\n"
        | Failure =>
          $"$(indent)failure\n"
        | Assign (path, decl, dtree) =>
          def i2 = indent + "   ";
          $"$(indent)def $(decl) = $path\n"
           "$(dtree.ToString (i2))"
        | IfEq (path, con, tr, fl) =>
          def i2 = indent + "   ";
          $"$(indent)if $path = $con:\n"
           "$(tr.ToString(i2))"
           "$(indent)else:\n"
           "$(fl.ToString(i2))"
      }
    }
  }
}

/*
BEGIN-OUTPUT
abcd'f'
1-2-3
if <path> = <con>:
   failure
else:
   success 1
END-OUTPUT
*/
