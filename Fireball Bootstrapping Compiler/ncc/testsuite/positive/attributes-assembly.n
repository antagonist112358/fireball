using System;
using System.Reflection;
using SCG = System.Collections.Generic;
using System.Console;
using Nemerle.Utility;

public sealed class TestAttribute : Attribute {

  public this (v : object) {
    value = v;
  }
  public this (v : int) {
    value = v;
  }
  public this (v : long) {
    value = v;
  }
  public this (v : string) {
    value = v;
  }
  public this (v : bool) {
    value = v;
  }
  public this(params args : array[string]) {
    value = args[0];
  }

  [Accessor] value : object;

}

[assembly: Test(10)]
[assembly: Test(true)]
[assembly: Test("Test")]
[assembly: Test("VarArgs", "")] // variable arguments

module Program {

  Main() : void {
    def values = SCG.List.[object]();
    values.Add(10);
    values.Add(true);
    values.Add("Test");
    values.Add("VarArgs");

    foreach(atb is TestAttribute in Attribute.GetCustomAttributes(Assembly.GetExecutingAssembly()))
      WriteLine(values.Contains(atb.Value));
  }

}
/*
BEGIN-OUTPUT
True
True
True
True
END-OUTPUT
*/