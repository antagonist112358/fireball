// REFERENCE: lvalue-macro

using LvalueMacro;
using System;

class MyClass
{
  public this()
  {
    def t = UseMyPropField();
    UseMyPropField() = t + 1;
    
    InitRef(ref UseMyPropField());
    InitOut(out UseMyPropField());
    
    InitValueRef(ref UseMyPropField(), 1);
    InitValueOut(out UseMyPropField(), 2);
  }
  
  public this(prop : int)
  {
    InitValueOut(out UseMyPropField(), prop);
  }

  InitRef(p : ref int) : void { p = 10; }
  InitOut(p : out int) : void { p = 20; }

  public MyProp : int { get { _myProp } }
  private _myProp : int;
  
  static InitValueRef[T](s : ref T, value : T) : void { s = value; }  
  static InitValueOut[T](s : out T, value : T) : void { s = value; }
}

module Program
{
  Main() : void
  { 
    def m1 = MyClass();
    Console.WriteLine(m1.MyProp);
    
    def m2 = MyClass(10);
    Console.WriteLine(m2.MyProp);
  }
}

/*
BEGIN-OUTPUT
2
10
END-OUTPUT
*/