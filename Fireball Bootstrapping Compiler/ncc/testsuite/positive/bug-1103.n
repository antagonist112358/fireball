using System.Collections.Generic;
using System.Console;

public module A
{
  public Where (_ : string * int -> bool) : void { WriteLine("string * int -> bool") }
  public Where (_ : string -> bool) : void { WriteLine("string -> bool") }

  public delegate Func1[T, R](x : T) : R;
  public delegate Func2[T1, T2, R](x : T1, y : T2) : R;

  public Where[T](_xs : IEnumerable[T], o : Func1[T, bool]) : void 
  { 
    WriteLine($"Func1[$(o.GetType().GetGenericArguments()[0]), bool]")
  }
  public Where[T](_xs : IEnumerable[T], o : Func2[T, int, bool]) : void
  {
    WriteLine($"Func2[$(o.GetType().GetGenericArguments()[0]), int, bool]")
  }
  
   public Main(_ : array[string]) : void
   {
   
    _ = Where (x => x.StartsWith ("str"));

     def d = List();
     d.Add("a");
     Where(d, x => x.StartsWith("str"));
     
     def s = array[1s, 2, 3];
     Where(s, x => x % 1s == 0);
     Where(s, (x, y) => x % y == 0);
     Where(s, x : _ * _ => x[0] % x[1] == 0);
     //_ = ReadLine();
   }
} 

/*
BEGIN-OUTPUT
string -> bool
Func1[System.String, bool]
Func1[System.Int16, bool]
Func2[System.Int16, int, bool]
Func2[System.Int16, int, bool]
END-OUTPUT
*/
