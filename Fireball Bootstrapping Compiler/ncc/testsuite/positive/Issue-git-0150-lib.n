// REFERENCE: Nemerle.Compiler

using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Compiler.Typedtree;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;

namespace ReflectEnumMacros
{
  macro ReflectEnum(enumType : PExpr, func : PExpr)
  {
    ReflectEnumMacrosImpl.DoTransform(Macros.ImplicitCTX(), enumType, func)
  }
  
  module ReflectEnumMacrosImpl
  {
    public DoTransform(typer : Typer, enumType : PExpr, func : PExpr) : PExpr
    {
      Macros.DefineCTX(typer);
      
      def type = typer.BindFixedType(enumType);
      
      if (!type.IsEnum)
        Message.FatalError(enumType.Location, "Expected enum");
      else
      {
        def fields = type.TypeInfo.GetFields(BindingFlags.DeclaredOnly | BindingFlags.Public | BindingFlags.Static);
        def exprs = fields.Map(field => <[ $func($(type : typed).$(field.Name : global)) ]>);
        <[ { ..$exprs } ]>
      }
    }
  }
}